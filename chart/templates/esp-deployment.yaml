apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-esp
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: esp
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    timestamp: {{ .Release.Time }}
spec:
  replicas: {{ .Values.esp.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: esp
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: esp
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: talksToHsm
                operator: Exists
            topologyKey: "kubernetes.io/hostname"
      restartPolicy: Always
      containers:
      - name: esp
        image: "{{ .Values.esp.image.repository }}:{{ .Values.esp.image.tag }}"
        imagePullPolicy: {{ .Values.esp.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 80
        - name: mgmt
          containerPort: 6001
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: mgmt
          initialDelaySeconds: 20
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
        env:
        - name: PORT
          value: "80"
        - name: METADATA_REFRESH_DELAY
          value: "60000"
        - name: PROXY_NODE_AUTHN_REQUEST_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-proxy-node-metadata
              key: postURL
        - name: CONNECTOR_NODE_ENTITY_ID
          value: {{ include "connector.entityID" . }}
        - name: CONNECTOR_NODE_METADATA_URL
          value: {{ include "connector.metadata.url" . }}
{{- if .Values.stubConnector.enabled }}
        - name: CONNECTOR_NODE_METADATA_TRUSTSTORE
          valueFrom:
            configMapKeyRef:
              name: test-pki-configmap
              key: stub_connector.truststore.base64
        - name: CONNECTOR_NODE_METADATA_TRUSTSTORE_PASSWORD
          value: {{ .Values.connector.metadataSigningTruststorePassword }}
{{- else }}
        - name: CONNECTOR_NODE_METADATA_TRUSTSTORE
          value: {{ .Values.connector.metadataSigningTruststoreBase64 }}
        - name: CONNECTOR_NODE_METADATA_TRUSTSTORE_PASSWORD
          value: {{ .Values.connector.metadataSigningTruststorePassword }}
{{- end }}
        - name: REDIS_SERVER_URI
          value: redis://{{ .Release.Name }}-esp-redis:6379/
        - name: METATRON_URI
          value: http://{{ .Release.Name }}-metatron/

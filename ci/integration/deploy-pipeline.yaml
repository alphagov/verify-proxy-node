---
apiVersion: concourse.govsvc.uk/v1beta1
kind: Pipeline
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: deploy
spec:
  exposed: true
  config:

    github_source: &github_source
      uri: https://github.com/alphagov/verify-proxy-node.git
      organization: alphagov
      owner: alphagov
      repository: verify-proxy-node
      github_api_token: ((github.api-token))
      access_token: ((github.api-token))
      approvers: ((trusted-developers.github-accounts))
      required_approval_count: 2

    task_toolbox: &task_toolbox
      type: docker-image
      source:
        repository: ((concourse.task-toolbox-image))
        tag: ((concourse.task-toolbox-tag))

    resource_types:

    - name: github
      type: registry-image
      source:
        repository: ((concourse.github-resource-image))
        tag: ((concourse.github-resource-tag))

    resources:

    - name: release
      type: github-release
      icon: tag
      source:
        <<: *github_source
        tag_filter: ^v2\.\d+$

    - name: daily
      type: time
      icon: update
      source:
        interval: 12h
        start: 8:00 AM
        stop: 8:00 PM

    jobs:

    - name: deploy-dk-integration
      serial: true
      plan:

      - get: release
        trigger: true

      - get: daily
        trigger: true

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: release
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            CLUSTER_PUBLIC_KEY: ((artefact-signing-key.publicKey))
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: dk-integration
            CONNECTOR_NODE_NATIONALITY_CODE: DK
            CONNECTOR_ENTITY_ID: https://eidasconnector.test.eid.digst.dk/Metadata
            CONNECTOR_METADATA_FQDN: eidasconnector.test.eid.digst.dk
            CONNECTOR_METADATA_PATH: /Metadata
            CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64: 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
            CLOUDHSM_IP: ((cluster.cloudHsmIp))
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "preparing keyring..."
              echo "${CLUSTER_PUBLIC_KEY}" > key
              gpg --import key
              gpg --export > ~/.gnupg/pubring.gpg
              echo "verifying package"
              helm verify ./release/*.tgz
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --set "global.cloudHsm.ip=${CLOUDHSM_IP}" \
                --set "connector.entityID=${CONNECTOR_ENTITY_ID}" \
                --set "connector.metadata.fqdn=${CONNECTOR_METADATA_FQDN}" \
                --set "connector.metadata.path=${CONNECTOR_METADATA_PATH}" \
                --set "connector.metadataSigningTruststoreBase64=${CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64}" \
                --set "translator.connectorNodeNationalityCode=${CONNECTOR_NODE_NATIONALITY_CODE}" \
                --output-dir "./manifests/" \
                ./release/*.tgz

      - task: deploy-manifests
        timeout: 10m
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: dk-integration
            APP_NAME: proxy-node
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "configuring kubectl"
              echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
              kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
              kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
              kubectl config set-context deployer --user deployer --cluster self
              kubectl config use-context deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kapp deploy \
                -y \
                --namespace "${RELEASE_NAMESPACE}" \
                --allow-ns "${RELEASE_NAMESPACE}" \
                --app "${RELEASE_NAME}-${APP_NAME}" \
                --diff-changes \
                -f ./manifests/


    - name: deploy-nl-integration
      serial: true
      plan:

      - get: release
        trigger: true

      - get: daily
        trigger: true

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: release
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            CLUSTER_PUBLIC_KEY: ((artefact-signing-key.publicKey))
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: nl-integration
            CONNECTOR_NODE_NATIONALITY_CODE: NL
            CONNECTOR_ENTITY_ID: https://acc-eidas.minez.nl/EidasNodeC/ConnectorMetadata
            CONNECTOR_METADATA_FQDN: acc-eidas.minez.nl
            CONNECTOR_METADATA_PATH: /EidasNodeC/ConnectorMetadata
            CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64: 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
            CLOUDHSM_IP: ((cluster.cloudHsmIp))
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "preparing keyring..."
              echo "${CLUSTER_PUBLIC_KEY}" > key
              gpg --import key
              gpg --export > ~/.gnupg/pubring.gpg
              echo "verifying package"
              helm verify ./release/*.tgz
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --set "global.cloudHsm.ip=${CLOUDHSM_IP}" \
                --set "connector.entityID=${CONNECTOR_ENTITY_ID}" \
                --set "connector.metadata.fqdn=${CONNECTOR_METADATA_FQDN}" \
                --set "connector.metadata.path=${CONNECTOR_METADATA_PATH}" \
                --set "connector.metadataSigningTruststoreBase64=${CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64}" \
                --set "translator.connectorNodeNationalityCode=${CONNECTOR_NODE_NATIONALITY_CODE}" \
                --output-dir "./manifests/" \
                ./release/*.tgz

      - task: deploy-manifests
        timeout: 10m
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: nl-integration
            APP_NAME: proxy-node
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "configuring kubectl"
              echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
              kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
              kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
              kubectl config set-context deployer --user deployer --cluster self
              kubectl config use-context deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kapp deploy \
                -y \
                --namespace "${RELEASE_NAMESPACE}" \
                --allow-ns "${RELEASE_NAMESPACE}" \
                --app "${RELEASE_NAME}-${APP_NAME}" \
                --diff-changes \
                -f ./manifests/

    - name: deploy-se-integration
      serial: true
      plan:

      - get: release
        trigger: true

      - get: daily
        trigger: true

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: release
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            CLUSTER_PUBLIC_KEY: ((artefact-signing-key.publicKey))
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: se-integration
            CONNECTOR_NODE_NATIONALITY_CODE: SE
            CONNECTOR_ENTITY_ID: https://qa.connector.eidas.swedenconnect.se/idp/metadata/sp
            CONNECTOR_METADATA_FQDN: qa.connector.eidas.swedenconnect.se
            CONNECTOR_METADATA_PATH: /idp/metadata/sp
            CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64: MIIGXgIBAzCCBhcGCSqGSIb3DQEHAaCCBggEggYEMIIGADCCBfwGCSqGSIb3DQEHBqCCBe0wggXpAgEAMIIF4gYJKoZIhvcNAQcBMCkGCiqGSIb3DQEMAQYwGwQU0yoaBA/k0XSubaX3s1AfylKQw8QCAwDDUICCBahoTSw5pcy20SWr34/9qEsNIZYMHCbugc/fyQ3px1AUwtIvT9IimQ22B88erdtTVUGWH0sQYhOposNMVy/fOaByIlwAElmsOnBzItU+JDJncemUbBIHb9//hbEpRYsDraY1H0z5akHxreqJ7chK36LkblZxoKj5CbbScFFkHHUFCtLLl1FOxtaWtAWIFQM+aX9xZaZIOaQgqlHXUYHj2nbgp3NUJ0sKTRi4D22660L+v1hFg2PHpGarNLNgfmFSrHDxhM6SIL0va/k1ICa2Szpq7OGqLb8LAy2OQsXu47zG0syntDMD4VN7roqdHxVfKxDGqxmlItC7LfY/4KWspMSr+Pgpdc4qKb18Vg0sDvyxJ/BNt47n874Okot2opY3Si+qp5OPrNrX3dkcFNW8WyntX+MEdg24J1FxEoKRC8l+ORtRdrLtcieMh8eM6oC23GU9ERZmgigcmLzvt0IEUzXSTNydX2KAtJmPkX1c8rAP3eGxJc8YfJArtCUuRvHGIrUZJw39X01D+KmY8XpdNayy4eRgMxypY9/WIxU7F4fVXv5QBkwEBkPbT0tPRfglZG/V7AWFv4zYFlR38eYuRunH6PwiIrU7vKIFWBl4Pvpp7hi59gEpk7YuRswjJEyXxItxCL3aGef2qCJyXBWvRlKxfq7xztiPKLh4qjf2oVY0PiZr7IYdP2RhkFSLZ5X12Tvjq8tk52PcnFUAj3Cs4olHipqsFb+nd/qvbsoN2tNI0M5eFjkM7dReP/iHqJpb+Ov4IddrDae1/JoQl3lVJmEIEm+X0BU0UEcKWjY6qY7TSwVBobXDXHlejEq0+9mM+UE7zT3eOKhR8XYDrJSBI1jzB/iWcyUMfCaNGRLZ5mOVB+D7rjwVI61d6I+VEDFo60o5tSyhPiop9aswGaKkevcu4+i2n4upTiY0CKHjByBO7fdOxWz1skcLOkTlR74b5bKtgC4VzKS4Ox0YMUPo6uMOQP/fjYmlOGapYJcB9bAiizqIQ6brfrfrocvysuJ4is0VgQjq2ssVLO/ej5IV/R9Zt8tJCrRIEX/Lg/M71nuPkCQYIYCmI/ILjRlqKiRnFzTAskg5kLnAgTla1Qe0fTcV6xPuwfh+NJaDC7E1O2UIPtRskv53jMIolbzgQFqOrs43MsVA2FtjoHvJ2QUzlJ3xC34XtMTAvT2qwVUlwlwHQIii93coIuN1SJYhXuCaRGMz9buGPDbL4p80qtoCpd4vkGhsfuaS0u7GF54NPiLBo9EltL/80SCFE8aTtvIx8EEOKomFlzTB4XzIztgMH8lRsb/VH3VtGmUNUJllDSqGM634UKxsu+CKM+vqHQzruB6xJixfRnHczcz0m0jJ2f6ougxsaWGNam/ZablMiTsTuATAlgg30JPgHv+Eb0/57V/PmcoU7VzTuGSdaQkXqiDDpP52Y0/O2IKxCIL5Y9qPT8yGQ4G9m4QiPCH4z4T2KLIPUWP4aui54t6pCYlAy4lB7u/nnvLnJy+IVK31Eh40RywUssZGcvD+U+Qlco0FKp1SJBXG1gluIT1tkN4exp2oAEjGPKlZ3TzrGH3vtaWt5Jn7geBk0sCxi305artG/XbucAyG7y5P7xIOp39GXyhiGkQYa0aN8nNVcIBPoxAG2FpS/9IY6wUIf/Nl1VW8etGIP+zcrgNWb1Noqp8xcsR9H/DMydBuQOrQL6AY7r+as8srxIjk/s8IhmEvPBkA/u8g7/+giZeBH3q6hzIofzLW2GlPkpUUP2W9EEy0Qsc6wIKTyslgoA7l80qyYsQnRG/MbOvPKtrPoxHFbUK0DhV+VL0fkW83Ap+Pl8ltsco+cDVtyc5dkHJ7iEJFDHsxcKEdEgtHNFSldwWreDJcfpOxZ/Sq0fX8IB+Pb0PWzyf+YW6FBDbe3qRG0OdRJA2NkBm/nZDA2EtIljA+MCEwCQYFKw4DAhoFAAQUa9iuRrSYbpGKdgU7kS75zKzAcykEFBNoEirLMABWqhnxMbnwiG9Q5HsKAgMBhqA=
            CLOUDHSM_IP: ((cluster.cloudHsmIp))
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "preparing keyring..."
              echo "${CLUSTER_PUBLIC_KEY}" > key
              gpg --import key
              gpg --export > ~/.gnupg/pubring.gpg
              echo "verifying package"
              helm verify ./release/*.tgz
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --set "global.cloudHsm.ip=${CLOUDHSM_IP}" \
                --set "connector.entityID=${CONNECTOR_ENTITY_ID}" \
                --set "connector.metadata.fqdn=${CONNECTOR_METADATA_FQDN}" \
                --set "connector.metadata.path=${CONNECTOR_METADATA_PATH}" \
                --set "connector.metadataSigningTruststoreBase64=${CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64}" \
                --set "translator.connectorNodeNationalityCode=${CONNECTOR_NODE_NATIONALITY_CODE}" \
                --output-dir "./manifests/" \
                ./release/*.tgz

      - task: deploy-manifests
        timeout: 10m
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: se-integration
            APP_NAME: proxy-node
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "configuring kubectl"
              echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
              kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
              kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
              kubectl config set-context deployer --user deployer --cluster self
              kubectl config use-context deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kapp deploy \
                -y \
                --namespace "${RELEASE_NAMESPACE}" \
                --allow-ns "${RELEASE_NAMESPACE}" \
                --app "${RELEASE_NAME}-${APP_NAME}" \
                --diff-changes \
                -f ./manifests/

    - name: deploy-cz-integration
      serial: true
      plan:

      - get: release
        trigger: true

      - get: daily
        trigger: true

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: release
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            CLUSTER_PUBLIC_KEY: ((artefact-signing-key.publicKey))
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: cz-integration
            CONNECTOR_NODE_NATIONALITY_CODE: CZ
            CONNECTOR_ENTITY_ID: https://conn.dev.eidasnode.cz/EidasNode/ConnectorMetadata
            CONNECTOR_METADATA_FQDN: conn.dev.eidasnode.cz
            CONNECTOR_METADATA_PATH: /EidasNode/ConnectorMetadata
            CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64: MIIDvgIBAzCCA3cGCSqGSIb3DQEHAaCCA2gEggNkMIIDYDCCA1wGCSqGSIb3DQEHBqCCA00wggNJAgEAMIIDQgYJKoZIhvcNAQcBMCkGCiqGSIb3DQEMAQYwGwQUtEBxkJF5nQodITN8RMG0SZZySZMCAwDDUICCAwgxpPO5+psYMsSUd2od5jkna9gy/gwbUh7oeJbGUJSPRYdVtpY/+2b+nAX75dLf07AXkXweSWfWV1nhCBg3PvHEFi+BtrULM+xeQ91Oe5w768LMgsQxq/oTkZ25iP6PldCC6ElJckcH+cxsuziUjrt3WMkdx9PrFqZHBRRH5OYQi25Q/A6yiXg823tsyCQEOLJk5omZvtRPjfKRLaGmBhd37nrMy/texLJfR7xpj2BVuv/0Jl4PwijPBvXbT7DE28x3WSI5JL3MeouZT4oklKzRPx2U4SyhIG1B7leYIoaC/Cp3G3i5XiqwdnaXFr0SwKbhZCBk32S2I6gTQpCWaypv8+LilwtTWDiG83OYYOkDArP4+23RkUgu40Dz8K4cyGibH9CS2i619GGPOXc+/za5s2AE0hYvZGWZUdxKJcCxmbaDFpDP+KJvtnGKtCKv0tigwUtHzI0Ydh8in6Qp/osnO3aMjRTxdfRD4ynQA2C8+gxcjTzZSrzQpsSBFE/+BXL6G1AUqNPCpAWMb4n0U9P9LXz1FD2zhz6PgtUjglIXPvK+IeuAoiwYYSlRBtItazsMsWBjBqqMGKt3f4YCasxFg/2hTrkNhb13QhYlkusAFSMfR5SG5BTYZ53uAZOBnZD4ToKf3yCLqsm05PV9NexyPbUhAGuX/AJ7cILM0Exlaa+TozjV6wQAKzDMfnRcFicYsLQg9ebRa67Azdg4QYBd2CCDwMKu3bmFGFmP38BOr7LOBhkp5QK/P4U5ZY5b9bTu4QKGr7M7ZidChUlqq4Zf8fik6TD5fj1gn8o2ULHmsxiwCkPq/ukQJqjEoKIRxYIgZmE9NwqVWz0ALNULmOLceVjd2iadjgPST05AMcsEUKbz0Z4wmJu7o9ligPXKaybKcnJW93mAzJQbKg9ZxZiqwZgkTx+BWWnpf8FDKPyMxlljlw8e/dMvgkPSXkr01wm0pQqQ5oxPHTYSJsyVPK1T2XjBMyp+mAi1ZhAracB27PfGN88Tsdg2Md1LnB7zcyRXRIiayOZFnDA+MCEwCQYFKw4DAhoFAAQUG0IyxZ29L0sOyOu0K9E3T5yBXAAEFPpJ9er/sYynQAmGFCOUOrjKOKfhAgMBhqA=
            CLOUDHSM_IP: ((cluster.cloudHsmIp))
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "preparing keyring..."
              echo "${CLUSTER_PUBLIC_KEY}" > key
              gpg --import key
              gpg --export > ~/.gnupg/pubring.gpg
              echo "verifying package"
              helm verify ./release/*.tgz
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --set "global.cloudHsm.ip=${CLOUDHSM_IP}" \
                --set "connector.entityID=${CONNECTOR_ENTITY_ID}" \
                --set "connector.metadata.fqdn=${CONNECTOR_METADATA_FQDN}" \
                --set "connector.metadata.path=${CONNECTOR_METADATA_PATH}" \
                --set "connector.metadataSigningTruststoreBase64=${CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64}" \
                --set "translator.connectorNodeNationalityCode=${CONNECTOR_NODE_NATIONALITY_CODE}" \
                --output-dir "./manifests/" \
                ./release/*.tgz

      - task: deploy-manifests
        timeout: 10m
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: cz-integration
            APP_NAME: proxy-node
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "configuring kubectl"
              echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
              kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
              kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
              kubectl config set-context deployer --user deployer --cluster self
              kubectl config use-context deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kapp deploy \
                -y \
                --namespace "${RELEASE_NAMESPACE}" \
                --allow-ns "${RELEASE_NAMESPACE}" \
                --app "${RELEASE_NAME}-${APP_NAME}" \
                --diff-changes \
                -f ./manifests/

    - name: deploy-it-integration
      serial: true
      plan:

      - get: release
        trigger: true

      - get: daily
        trigger: true

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: release
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            CLUSTER_PUBLIC_KEY: ((artefact-signing-key.publicKey))
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: it-integration
            CONNECTOR_NODE_NATIONALITY_CODE: IT
            CONNECTOR_ENTITY_ID: https://connector.pre.eid.gov.it/EidasNode/ConnectorMetadata
            CONNECTOR_METADATA_FQDN: connector.pre.eid.gov.it
            CONNECTOR_METADATA_PATH: /EidasNode/ConnectorMetadata
            CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64: MIIFlgIBAzCCBU8GCSqGSIb3DQEHAaCCBUAEggU8MIIFODCCBTQGCSqGSIb3DQEHBqCCBSUwggUhAgEAMIIFGgYJKoZIhvcNAQcBMCkGCiqGSIb3DQEMAQYwGwQUsgaqXrNnmO1JA8dZ9+fTipn3yngCAwDDUICCBOBwArUVyBPKEH232lZD4z3a08MvPF70G1rfg2dT7/33afUybZ1bDxHknNa5NETVaEd/LZLOEPDcJEsrz3z4lXe++WV356W4/EuMHPZziWLQkI3XKZHVPpDqIO9feAdKUW0wdQewF2FlTo0o3Xc63qcz9fLZM4DiuHDplSUBLztBRhiJnPzZStUwh62FTrJr1apxLMrcC3XHS4BIL20i51jcv6LYDS1VyWu1TeNkmf9BFM27tEynqXABwXXoNxuMuGggp9nSITc6H6J0fJa13Zp1gnyUgk57/F+/r5Afim/QG8yPleJZxlwQ2np3pfC1cXNk2THPmynF6V0JLa9NWqUzE/1Ocy5bgrNrGTvvTya0mNqnOtEJZdVPRk9YIp/F/iZYjSA9EKKSoK/d1jDPagU7Y9iNqsc2duAhQPMbHA2HcLfnUcNyxGCtQWt+Htu1EAK+fKWDAMsMRQpOKFo34/t+rlH1onwNX16oqIsLUWJrRo36isg3xXAQSYL0QazsBJpTxcUSwIVplIdv7aSbSlPw8iKcpn2ksQe6e4jZvN2rZ45LfDOdinojlPiTcy804hW6KMkQ2VNadfWFoKyj9GZ/kbMvHqrgH8IwVLInhPtnXsP+6ALDJglshyKBgB/Z0T6iZqkPUIobxx4p35nGb4FcNxFLhRCQqBcK2OMXxoJGc3TJBnypNjgn9QOltXIUtOHgESlfBdYDWyKlPOYMY+3XBHAxlfAp2AeZosMQNsXhx1SWlxws+MsPdIUbUh+44rM/2TFvH6W1SP9kXGPW2bOih1M3eQ896v36Nx8FQbatv6567VTh4gxEt9XfuDprHvrax37wcYFcKEFJpnwE6kj4wIQyEXTwbKBe0X1SZU2hGbJqpgY3v7PHkwRJKBHVKbI6qQoVaivZMKS8R9+VglM5yrgMnNE9jkqqC9FYrrUC7A4Aq6RIKDpBx7etHjqqFhCf8TsQEYLhnLoUjK1jgIMzYWD7Vif64mWNl2udKBMoi1FX3SP8vfw08idwojn9MgZTGu4wJnk8ySIDGFL2536HedA7QwhNCukjWLqjbfpXWrR15K9uwj+ea/trgwKhUWzyD2qzj7q57k+9rujTdF7+Ywfq7FNmx+xNAP6CbsLPN/fYtdXH9buZMYzNOBfUFuI3RyGd9sE33rsb/dd/XWIArLicmCglVQJbRZs1WKhcJyAc90pJzcJy5U5L3vsO1/gkU0e0aVyKfclkdJJhnaUkKbSBVy6rhVe7KsUXC74NBCxwK0smBKtHSFqXU+Dx5SMgLYyOi0PWWpdbQ6V3Dih08nxOR5Lyg4gcPC1S4hzPdojC5PRU6IqdsE/0smUNW/DuHSXK0G/VuiRAehAE9tgsKpFOL8+INcE58r8SI6vBmwzVVh7MXP43UeL7v5WUhekndiX0Butvk3AvrJ009tm4KxQNn5XMy/rDLuMVUadlPKDW5pZQwBDAsIm620mmztaaCqnLWKq3JHsCGLvPQ8ziZmCRwTlz3DiqeoaNzWbnwlKr9y8HedARD2sNTHhrLQZLseZ+6SerUJYGUVPkre1rT3k7n01VHNRWEelOwL/c2cYe3zWAWCB69r1nqAQoCfDwSbnKpSnZY5KrLjbyizouEZU3fOaPuoiF4wRljVg9ZP8jW4faFcXlFmlsbovIZTowPjAhMAkGBSsOAwIaBQAEFIhm7rIYwXMOFhByZOZ9HFjwwdFXBBTgluTQjkKxcHxT1HEchPsMprSReQIDAYag
            CLOUDHSM_IP: ((cluster.cloudHsmIp))
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "preparing keyring..."
              echo "${CLUSTER_PUBLIC_KEY}" > key
              gpg --import key
              gpg --export > ~/.gnupg/pubring.gpg
              echo "verifying package"
              helm verify ./release/*.tgz
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --set "global.cloudHsm.ip=${CLOUDHSM_IP}" \
                --set "connector.entityID=${CONNECTOR_ENTITY_ID}" \
                --set "connector.metadata.fqdn=${CONNECTOR_METADATA_FQDN}" \
                --set "connector.metadata.path=${CONNECTOR_METADATA_PATH}" \
                --set "connector.metadataSigningTruststoreBase64=${CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64}" \
                --set "translator.connectorNodeNationalityCode=${CONNECTOR_NODE_NATIONALITY_CODE}" \
                --output-dir "./manifests/" \
                ./release/*.tgz

      - task: deploy-manifests
        timeout: 10m
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: it-integration
            APP_NAME: proxy-node
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "configuring kubectl"
              echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
              kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
              kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
              kubectl config set-context deployer --user deployer --cluster self
              kubectl config use-context deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kapp deploy \
                -y \
                --namespace "${RELEASE_NAMESPACE}" \
                --allow-ns "${RELEASE_NAMESPACE}" \
                --app "${RELEASE_NAME}-${APP_NAME}" \
                --diff-changes \
                -f ./manifests/

    - name: deploy-test-integration
      serial: true
      plan:

        - get: release
          trigger: true

        - get: daily
          trigger: true

        - task: render-manifests
          config:
            platform: linux
            image_resource: *task_toolbox
            inputs:
              - name: release
            outputs:
              - name: manifests
            params:
              CLUSTER_NAME: ((cluster.name))
              CLUSTER_DOMAIN: ((cluster.domain))
              CLUSTER_PUBLIC_KEY: ((artefact-signing-key.publicKey))
              RELEASE_NAMESPACE: ((namespace-deployer.namespace))
              RELEASE_NAME: test-integration
              CLOUDHSM_IP: ((cluster.cloudHsmIp))
            run:
              path: /bin/bash
              args:
                - -euc
                - |
                  echo "preparing keyring..."
                  echo "${CLUSTER_PUBLIC_KEY}" > key
                  gpg --import key
                  gpg --export > ~/.gnupg/pubring.gpg
                  echo "verifying package"
                  helm verify ./release/*.tgz
                  echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
                  helm template \
                    --name "${RELEASE_NAME}" \
                    --namespace "${RELEASE_NAMESPACE}" \
                    --set "global.cluster.name=${CLUSTER_NAME}" \
                    --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                    --set "global.cloudHsm.ip=${CLOUDHSM_IP}" \
                    --set "stubConnector.enabled=true" \
                    --output-dir "./manifests/" \
                    ./release/*.tgz

        - task: deploy-manifests
          timeout: 10m
          config:
            platform: linux
            image_resource: *task_toolbox
            inputs:
              - name: manifests
            params:
              KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
              KUBERNETES_TOKEN: ((namespace-deployer.token))
              KUBERNETES_API: kubernetes.default.svc
              RELEASE_NAMESPACE: ((namespace-deployer.namespace))
              RELEASE_NAME: test-integration
              APP_NAME: proxy-node
            run:
              path: /bin/bash
              args:
                - -euc
                - |
                  echo "configuring kubectl"
                  echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
                  kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
                  kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
                  kubectl config set-context deployer --user deployer --cluster self
                  kubectl config use-context deployer

                  echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
                  kapp deploy \
                    -y \
                    --namespace "${RELEASE_NAMESPACE}" \
                    --allow-ns "${RELEASE_NAMESPACE}" \
                    --app "${RELEASE_NAME}-${APP_NAME}" \
                    --diff-changes \
                    -f ./manifests/

    - name: deploy-mt-integration
      serial: true
      plan:

        - get: release
          trigger: true

        - get: daily
          trigger: true

        - task: render-manifests
          config:
            platform: linux
            image_resource: *task_toolbox
            inputs:
              - name: release
            outputs:
              - name: manifests
            params:
              CLUSTER_NAME: ((cluster.name))
              CLUSTER_DOMAIN: ((cluster.domain))
              CLUSTER_PUBLIC_KEY: ((artefact-signing-key.publicKey))
              RELEASE_NAMESPACE: ((namespace-deployer.namespace))
              RELEASE_NAME: mt-integration
              CONNECTOR_NODE_NATIONALITY_CODE: MT
              CONNECTOR_ENTITY_ID: https://stgmteidasnode.gov.mt/EidasNode/ConnectorMetadata
              CONNECTOR_METADATA_FQDN: stgmteidasnode.gov.mt
              CONNECTOR_METADATA_PATH: /EidasNode/ConnectorMetadata
              CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64: 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
              CLOUDHSM_IP: ((cluster.cloudHsmIp))
            run:
              path: /bin/bash
              args:
                - -euc
                - |
                  echo "preparing keyring..."
                  echo "${CLUSTER_PUBLIC_KEY}" > key
                  gpg --import key
                  gpg --export > ~/.gnupg/pubring.gpg
                  echo "verifying package"
                  helm verify ./release/*.tgz
                  echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
                  helm template \
                    --name "${RELEASE_NAME}" \
                    --namespace "${RELEASE_NAMESPACE}" \
                    --set "global.cluster.name=${CLUSTER_NAME}" \
                    --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                    --set "global.cloudHsm.ip=${CLOUDHSM_IP}" \
                    --set "connector.entityID=${CONNECTOR_ENTITY_ID}" \
                    --set "connector.metadata.fqdn=${CONNECTOR_METADATA_FQDN}" \
                    --set "connector.metadata.path=${CONNECTOR_METADATA_PATH}" \
                    --set "connector.metadataSigningTruststoreBase64=${CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64}" \
                    --set "translator.connectorNodeNationalityCode=${CONNECTOR_NODE_NATIONALITY_CODE}" \
                    --output-dir "./manifests/" \
                    ./release/*.tgz

        - task: deploy-manifests
          timeout: 10m
          config:
            platform: linux
            image_resource: *task_toolbox
            inputs:
              - name: manifests
            params:
              KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
              KUBERNETES_TOKEN: ((namespace-deployer.token))
              KUBERNETES_API: kubernetes.default.svc
              RELEASE_NAMESPACE: ((namespace-deployer.namespace))
              RELEASE_NAME: mt-integration
              APP_NAME: proxy-node
            run:
              path: /bin/bash
              args:
                - -euc
                - |
                  echo "configuring kubectl"
                  echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
                  kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
                  kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
                  kubectl config set-context deployer --user deployer --cluster self
                  kubectl config use-context deployer

                  echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
                  kapp deploy \
                    -y \
                    --namespace "${RELEASE_NAMESPACE}" \
                    --allow-ns "${RELEASE_NAMESPACE}" \
                    --app "${RELEASE_NAME}-${APP_NAME}" \
                    --diff-changes \
                    -f ./manifests/
